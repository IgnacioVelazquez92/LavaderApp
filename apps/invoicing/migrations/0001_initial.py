# Generated by Django 5.2.6 on 2025-09-14 15:48

import apps.invoicing.models
import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('org', '0005_alter_empresa_options_alter_empresaconfig_options_and_more'),
        ('sales', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClienteFacturacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razon_social', models.CharField(max_length=255)),
                ('cuit', models.CharField(blank=True, help_text='Identificación (DNI/CUIT). No validado en MVP.', max_length=20)),
                ('domicilio', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('telefono', models.CharField(blank=True, max_length=64)),
                ('activo', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(blank=True, help_text='Relación opcional al cliente operativo; puede ser un tercero.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='perfiles_facturacion', to='customers.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perfiles_facturacion', to='org.empresa')),
            ],
            options={
                'verbose_name': 'Cliente de Facturación',
                'verbose_name_plural': 'Clientes de Facturación',
                'db_table': 'invoicing_cliente_facturacion',
                'ordering': ('-actualizado_en', 'razon_social'),
            },
        ),
        migrations.CreateModel(
            name='Comprobante',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('TICKET', 'Ticket'), ('REMITO', 'Remito')], default='TICKET', max_length=16)),
                ('punto_venta', models.CharField(default='1', max_length=4, validators=[django.core.validators.RegexValidator(message='El punto de venta debe ser un número de 1 a 4 dígitos (sin separadores).', regex='^\\d{1,4}$')])),
                ('numero', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('moneda', models.CharField(default='ARS', max_length=8)),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('snapshot', models.JSONField(help_text='Copia inmutable de la venta al momento de emisión (empresa, sucursal, cliente, items, totales, textos).')),
                ('archivo_html', models.FileField(blank=True, null=True, upload_to=apps.invoicing.models.invoice_upload_path)),
                ('archivo_pdf', models.FileField(blank=True, null=True, upload_to=apps.invoicing.models.invoice_upload_path)),
                ('emitido_en', models.DateTimeField(auto_now_add=True)),
                ('cliente', models.ForeignKey(help_text='Cliente operativo de la venta.', on_delete=django.db.models.deletion.PROTECT, related_name='comprobantes', to='customers.cliente')),
                ('cliente_facturacion', models.ForeignKey(blank=True, help_text='Perfil de facturación alternativo (opcional).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comprobantes', to='invoicing.clientefacturacion')),
                ('emitido_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comprobantes_emitidos', to=settings.AUTH_USER_MODEL)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comprobantes', to='org.empresa')),
                ('sucursal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comprobantes', to='org.sucursal')),
                ('venta', models.OneToOneField(help_text='Venta asociada; en MVP es 1:1.', on_delete=django.db.models.deletion.PROTECT, related_name='comprobante', to='sales.venta')),
            ],
            options={
                'db_table': 'invoicing_comprobante',
                'ordering': ('-emitido_en', '-id'),
                'constraints': [models.UniqueConstraint(fields=('sucursal', 'tipo', 'punto_venta', 'numero'), name='uq_num_comprobante_por_sucursal_tipo_pv')],
            },
        ),
        migrations.CreateModel(
            name='SecuenciaComprobante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('TICKET', 'Ticket'), ('REMITO', 'Remito')], max_length=16)),
                ('punto_venta', models.CharField(default='1', max_length=4, validators=[django.core.validators.RegexValidator(message='El punto de venta debe ser un número de 1 a 4 dígitos (sin separadores).', regex='^\\d{1,4}$')])),
                ('proximo_numero', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
                ('sucursal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secuencias_comprobantes', to='org.sucursal')),
            ],
            options={
                'db_table': 'invoicing_secuencia',
                'ordering': ('sucursal_id', 'tipo', 'punto_venta'),
                'unique_together': {('sucursal', 'tipo', 'punto_venta')},
            },
        ),
    ]
