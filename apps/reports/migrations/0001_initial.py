# Generated by Django 5.2.6 on 2025-10-06 01:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('org', '0006_add_cashbox_policy_to_empresa'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SavedReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, help_text='Nombre legible del preset (único por autor dentro de la empresa).', max_length=120, validators=[django.core.validators.MinLengthValidator(3)])),
                ('report_type', models.CharField(choices=[('sales_daily', 'Ventas por día'), ('sales_by_shift', 'Ventas por turno de caja'), ('payments_by_method', 'Pagos por método'), ('tips_by_user', 'Propinas por usuario'), ('cashbox_closures', 'Cierres de caja (Z)'), ('sales_monthly', 'Ventas mensuales'), ('sales_by_branch', 'Ventas por sucursal'), ('income_method_monthly', 'Ingresos por método (mensual)'), ('top_services', 'Servicios más vendidos'), ('consolidated_kpis', 'KPIs consolidados'), ('timeseries', 'Series temporales')], db_index=True, help_text='Tipo de reporte que renderizarán los services y vistas.', max_length=64)),
                ('params', models.JSONField(blank=True, default=dict, help_text='Parámetros serializables del reporte (filtros y opciones).')),
                ('is_public', models.BooleanField(default=False, help_text='Si es público, cualquier usuario de la empresa puede usar este preset.')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='Usuario que creó el preset.', on_delete=django.db.models.deletion.PROTECT, related_name='reports_created', to=settings.AUTH_USER_MODEL)),
                ('empresa', models.ForeignKey(help_text='Empresa a la que pertenece este preset.', on_delete=django.db.models.deletion.CASCADE, related_name='reports_saved', to='org.empresa')),
                ('sucursal', models.ForeignKey(blank=True, help_text='Sucursal opcional para acotar por defecto el preset.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports_saved', to='org.sucursal')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Último usuario que modificó el preset.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reports_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reporte guardado (preset)',
                'verbose_name_plural': 'Reportes guardados (presets)',
                'db_table': 'reports_saved_report',
                'ordering': ('-created_at', 'nombre'),
            },
        ),
        migrations.CreateModel(
            name='ReportExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('sales_daily', 'Ventas por día'), ('sales_by_shift', 'Ventas por turno de caja'), ('payments_by_method', 'Pagos por método'), ('tips_by_user', 'Propinas por usuario'), ('cashbox_closures', 'Cierres de caja (Z)'), ('sales_monthly', 'Ventas mensuales'), ('sales_by_branch', 'Ventas por sucursal'), ('income_method_monthly', 'Ingresos por método (mensual)'), ('top_services', 'Servicios más vendidos'), ('consolidated_kpis', 'KPIs consolidados'), ('timeseries', 'Series temporales')], db_index=True, help_text='Tipo de reporte exportado.', max_length=64)),
                ('params', models.JSONField(blank=True, default=dict, help_text='Parámetros usados al momento de exportar (se registran para auditoría).')),
                ('fmt', models.CharField(choices=[('xlsx', 'Excel'), ('csv', 'CSV'), ('pdf', 'PDF')], db_index=True, default='xlsx', help_text='Formato de archivo exportado.', max_length=8)),
                ('file', models.FileField(blank=True, help_text='Archivo generado (si aplica). Puede ser omitido en fallos.', null=True, upload_to='reports/exports/%Y/%m/%d/')),
                ('row_count', models.PositiveIntegerField(default=0, help_text='Cantidad de filas exportadas (si el formato lo admite).')),
                ('duration_ms', models.PositiveIntegerField(default=0, help_text='Tiempo de generación en milisegundos (métrica de performance).')),
                ('status', models.CharField(choices=[('done', 'Completado'), ('failed', 'Fallido')], db_index=True, default='done', help_text='Estado final de la exportación.', max_length=12)),
                ('error_message', models.TextField(blank=True, default='', help_text='Mensaje de error si la exportación falló.')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('empresa', models.ForeignKey(help_text='Empresa dueña de la exportación.', on_delete=django.db.models.deletion.CASCADE, related_name='reports_exports', to='org.empresa')),
                ('requested_by', models.ForeignKey(help_text='Usuario que solicitó la exportación.', on_delete=django.db.models.deletion.PROTECT, related_name='reports_exports_requested', to=settings.AUTH_USER_MODEL)),
                ('saved_report', models.ForeignKey(blank=True, help_text='Preset asociado (si la exportación proviene de un reporte guardado).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exports', to='reports.savedreport')),
            ],
            options={
                'verbose_name': 'Exportación de reporte',
                'verbose_name_plural': 'Exportaciones de reportes',
                'db_table': 'reports_export',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddIndex(
            model_name='savedreport',
            index=models.Index(fields=['empresa', 'report_type'], name='idx_sr_emp_rtype'),
        ),
        migrations.AddIndex(
            model_name='savedreport',
            index=models.Index(fields=['empresa', 'sucursal'], name='idx_sr_emp_suc'),
        ),
        migrations.AddConstraint(
            model_name='savedreport',
            constraint=models.UniqueConstraint(fields=('empresa', 'created_by', 'nombre'), name='uniq_sr_emp_author_name'),
        ),
        migrations.AddIndex(
            model_name='reportexport',
            index=models.Index(fields=['empresa', 'report_type', 'fmt'], name='idx_re_emp_typ_fmt'),
        ),
        migrations.AddIndex(
            model_name='reportexport',
            index=models.Index(fields=['empresa', 'status'], name='idx_re_emp_stat'),
        ),
    ]
