# Generated by Django 5.2.6 on 2025-09-18 02:29

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('org', '0005_alter_empresa_options_alter_empresaconfig_options_and_more'),
        ('sales', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlantillaNotif',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clave', models.SlugField(help_text='Identificador único por empresa (ej: ready_to_pickup_email).', max_length=80)),
                ('canal', models.CharField(choices=[('email', 'Email'), ('whatsapp', 'WhatsApp')], max_length=16)),
                ('asunto_tpl', models.CharField(blank=True, help_text='Solo para email. Puede dejarse vacío.', max_length=200)),
                ('cuerpo_tpl', models.TextField(help_text='Texto de la notificación con variables {{...}} (ej. {{cliente.nombre}}).')),
                ('activo', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plantillas_notif_creadas', to=settings.AUTH_USER_MODEL)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plantillas_notif', to='org.empresa')),
            ],
            options={
                'verbose_name': 'Plantilla de notificación',
                'verbose_name_plural': 'Plantillas de notificación',
                'db_table': 'notifications_plantilla',
                'ordering': ['-creado_en'],
            },
        ),
        migrations.CreateModel(
            name='LogNotif',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('canal', models.CharField(choices=[('email', 'Email'), ('whatsapp', 'WhatsApp')], max_length=16)),
                ('destinatario', models.CharField(max_length=255)),
                ('asunto_renderizado', models.CharField(blank=True, max_length=200)),
                ('cuerpo_renderizado', models.TextField()),
                ('estado', models.CharField(choices=[('enviado', 'Enviado'), ('error', 'Error')], max_length=16)),
                ('error_msg', models.TextField(blank=True, default='')),
                ('enviado_en', models.DateTimeField(default=django.utils.timezone.now)),
                ('idempotency_key', models.CharField(blank=True, help_text='Clave opcional para deduplicar envíos (no obligatorio en MVP).', max_length=80)),
                ('meta', models.JSONField(blank=True, default=dict, help_text='Datos adicionales del envío (nota_extra, variables, etc.).')),
                ('creado_por', models.ForeignKey(blank=True, help_text='Usuario que ejecutó el envío (si aplica).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs_notif_creados', to=settings.AUTH_USER_MODEL)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs_notif', to='org.empresa')),
                ('venta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs_notif', to='sales.venta')),
                ('plantilla', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='notifications.plantillanotif')),
            ],
            options={
                'verbose_name': 'Log de notificación',
                'verbose_name_plural': 'Logs de notificaciones',
                'db_table': 'notifications_log',
                'ordering': ['-enviado_en'],
            },
        ),
        migrations.AddIndex(
            model_name='plantillanotif',
            index=models.Index(fields=['empresa', 'activo'], name='idx_notif_tpl_emp_activo'),
        ),
        migrations.AddIndex(
            model_name='plantillanotif',
            index=models.Index(fields=['empresa', 'canal'], name='idx_notif_tpl_emp_canal'),
        ),
        migrations.AddIndex(
            model_name='plantillanotif',
            index=models.Index(fields=['creado_en'], name='idx_notif_tpl_creado'),
        ),
        migrations.AddConstraint(
            model_name='plantillanotif',
            constraint=models.UniqueConstraint(fields=('empresa', 'clave'), name='uq_notifications_plantilla_empresa_clave'),
        ),
        migrations.AddConstraint(
            model_name='plantillanotif',
            constraint=models.CheckConstraint(condition=models.Q(('cuerpo_tpl', ''), _negated=True), name='ck_notifications_plantilla_cuerpo_no_vacio'),
        ),
        migrations.AddIndex(
            model_name='lognotif',
            index=models.Index(fields=['empresa', 'enviado_en'], name='idx_notif_log_emp_fecha'),
        ),
        migrations.AddIndex(
            model_name='lognotif',
            index=models.Index(fields=['venta', 'enviado_en'], name='idx_notif_log_venta_fecha'),
        ),
        migrations.AddIndex(
            model_name='lognotif',
            index=models.Index(fields=['empresa', 'canal'], name='idx_notif_log_emp_canal'),
        ),
        migrations.AddIndex(
            model_name='lognotif',
            index=models.Index(fields=['idempotency_key'], name='idx_notif_log_idem'),
        ),
    ]
